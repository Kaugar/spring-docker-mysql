buildscript {
    ext {
        springBootVersion = '1.2.7.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('io.spring.gradle:dependency-management-plugin:0.5.2.RELEASE')
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'docker'

// This is used as the docker image prefix (org)
group = 'spring'

jar {
    baseName = 'springapp'
    version = '0.0.1'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    //compile 'org.springframework.hateoas:spring-hateoas:0.19.0.RELEASE'
    runtime('mysql:mysql-connector-java')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task buildDockerData(type: Docker) {
  push = false
  applicationName = "${jar.baseName}-data"
  dockerfile = file('src/main/docker/data/Dockerfile')
}

task buildDockerMySql(type: Docker, dependsOn: buildDockerData) {
  push = false
  applicationName = "${jar.baseName}-mysql"
  dockerfile = file('src/main/docker/mysql/Dockerfile')

}

task buildDocker(type: Docker, dependsOn: buildDockerMySql) {
  push = false
  applicationName = "${jar.baseName}-web"
  dockerfile = file('src/main/docker/web/Dockerfile')
  doFirst {
    copy {
      from jar
      into stageDir
    }
  }
}

task writeClasspath {
    //buildDir.mkdirs()
    new File(".", ".classpath").text = configurations.runtime.asPath + "\n"
}
tasks.build.dependsOn(writeClasspath)


task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}
